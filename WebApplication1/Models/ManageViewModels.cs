using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNet.Identity;
using Microsoft.Owin.Security;

namespace TechmerVision.Models
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   A ViewModel for the index. </summary>
    ///
    /// <remarks>   Aedmonds, 8/25/2017. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    public class IndexViewModel
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a value indicating whether this object has password. </summary>
        ///
        /// <value> True if this object has password, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public bool HasPassword { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the logins. </summary>
        ///
        /// <value> The logins. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public IList<UserLoginInfo> Logins { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the phone number. </summary>
        ///
        /// <value> The phone number. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public string PhoneNumber { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a value indicating whether the two factor. </summary>
        ///
        /// <value> True if two factor, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public bool TwoFactor { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a value indicating whether the browser remembered. </summary>
        ///
        /// <value> True if browser remembered, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public bool BrowserRemembered { get; set; }
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   A ViewModel for the manage logins. </summary>
    ///
    /// <remarks>   Aedmonds, 8/25/2017. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    public class ManageLoginsViewModel
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the current logins. </summary>
        ///
        /// <value> The current logins. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public IList<UserLoginInfo> CurrentLogins { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the other logins. </summary>
        ///
        /// <value> The other logins. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public IList<AuthenticationDescription> OtherLogins { get; set; }
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   A ViewModel for the factor. </summary>
    ///
    /// <remarks>   Aedmonds, 8/25/2017. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    public class FactorViewModel
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the purpose. </summary>
        ///
        /// <value> The purpose. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public string Purpose { get; set; }
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   A ViewModel for the set password. </summary>
    ///
    /// <remarks>   Aedmonds, 8/25/2017. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    public class SetPasswordViewModel
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the new password. </summary>
        ///
        /// <value> The new password. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [Required]
        [StringLength(100, ErrorMessage = "The {0} must be at least {2} characters long.", MinimumLength = 6)]
        [DataType(DataType.Password)]
        [Display(Name = "New password")]
        public string NewPassword { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the confirm password. </summary>
        ///
        /// <value> The confirm password. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataType(DataType.Password)]
        [Display(Name = "Confirm new password")]
        [Compare("NewPassword", ErrorMessage = "The new password and confirmation password do not match.")]
        public string ConfirmPassword { get; set; }
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   A ViewModel for the change password. </summary>
    ///
    /// <remarks>   Aedmonds, 8/25/2017. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    public class ChangePasswordViewModel
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the old password. </summary>
        ///
        /// <value> The old password. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [Required]
        [DataType(DataType.Password)]
        [Display(Name = "Current password")]
        public string OldPassword { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the new password. </summary>
        ///
        /// <value> The new password. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [Required]
        [StringLength(100, ErrorMessage = "The {0} must be at least {2} characters long.", MinimumLength = 6)]
        [DataType(DataType.Password)]
        [Display(Name = "New password")]
        public string NewPassword { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the confirm password. </summary>
        ///
        /// <value> The confirm password. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataType(DataType.Password)]
        [Display(Name = "Confirm new password")]
        [Compare("NewPassword", ErrorMessage = "The new password and confirmation password do not match.")]
        public string ConfirmPassword { get; set; }
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   A ViewModel for the add phone number. </summary>
    ///
    /// <remarks>   Aedmonds, 8/25/2017. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    public class AddPhoneNumberViewModel
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the number of.  </summary>
        ///
        /// <value> The number. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [Required]
        [Phone]
        [Display(Name = "Phone Number")]
        public string Number { get; set; }
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   A ViewModel for the verify phone number. </summary>
    ///
    /// <remarks>   Aedmonds, 8/25/2017. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    public class VerifyPhoneNumberViewModel
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the code. </summary>
        ///
        /// <value> The code. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [Required]
        [Display(Name = "Code")]
        public string Code { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the phone number. </summary>
        ///
        /// <value> The phone number. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [Required]
        [Phone]
        [Display(Name = "Phone Number")]
        public string PhoneNumber { get; set; }
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   A ViewModel for the configure two factor. </summary>
    ///
    /// <remarks>   Aedmonds, 8/25/2017. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    public class ConfigureTwoFactorViewModel
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the selected provider. </summary>
        ///
        /// <value> The selected provider. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public string SelectedProvider { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the providers. </summary>
        ///
        /// <value> The providers. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public ICollection<System.Web.Mvc.SelectListItem> Providers { get; set; }
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   A ViewModel for the edit profile. </summary>
    ///
    /// <remarks>   Aedmonds, 8/25/2017. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    public class EditProfileViewModel
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the hometown. </summary>
        ///
        /// <value> The hometown. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [Display(Name = "Hometown")]
        public string Hometown { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the person's first name. </summary>
        ///
        /// <value> The name of the first. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [Display(Name = "First Name")]
        public string FirstName { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the person's last name. </summary>
        ///
        /// <value> The name of the last. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [Display(Name = "Last Name")]
        public string LastName { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the company. </summary>
        ///
        /// <value> The name of the company. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [Display(Name = "Company Name")]
        public string CompanyName { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the title. </summary>
        ///
        /// <value> The title. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [Display(Name = "Title")]
        public string Title { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the phone. </summary>
        ///
        /// <value> The phone. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [Display(Name = "Phone")]
        public string Phone { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the website. </summary>
        ///
        /// <value> The website. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [Display(Name = "Website")]
        public string Website { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the design role. </summary>
        ///
        /// <value> The design role. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [Display(Name = "Role in Design")]
        public string DesignRole { get; set; }
    }

}