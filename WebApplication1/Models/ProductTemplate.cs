using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace TechmerVision.Models
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   A product template. </summary>
    ///
    /// <remarks>   Aedmonds, 8/25/2017. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    public class ProductTemplate
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the identifier. </summary>
        ///
        /// <value> The identifier. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        public long Id { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the title. </summary>
        ///
        /// <value> The title. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public String Title { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the image. </summary>
        ///
        /// <value> The image. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [NotMapped]
        public String Image { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>
        ///     Gets or sets a value indicating whether this object has background image.
        /// </summary>
        ///
        /// <value> True if this object has background image, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Boolean HasBackgroundImage { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the background image. </summary>
        ///
        /// <value> The background image. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public String BackgroundImage { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the number of colors. </summary>
        ///
        /// <value> The total number of colors. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public int NumColors { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a value indicating whether the active. </summary>
        ///
        /// <value> True if active, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Boolean Active { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the filename of the file. </summary>
        ///
        /// <value> The name of the file. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public String FileName { get; set; }

        public string Owner { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Accessor property for the linked product template colors </summary>
        ///
        /// <value> A list of colors of the product templates. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public virtual ICollection<ProductTemplateColor> ProductTemplateColors { get; set; }
    }
}