using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Web;

namespace TechmerVision.Models
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   Base Class with standard properties used throughout the application. </summary>
    ///
    /// <remarks>   Aedmonds, 8/25/2017. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    public class Asset
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Store unique Identifier of Asset. </summary>
        ///
        /// <value> The identifier. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        public long Id {get; set;}

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Stores the UnixTimeStamp for the last time this asset was modified. </summary>
        ///
        /// <value> The modified time stamp. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public long ModifiedTimeStamp { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Stores screen x position for asset to displayed on the compare screen. </summary>
        ///
        /// <value> The x coordinate. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public decimal x { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Stores screen y position for asset to displayed on the compare screen. </summary>
        ///
        /// <value> The y coordinate. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public decimal y { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Stores scale for asset to displayed on the compare screen. </summary>
        ///
        /// <value> The s. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DefaultValue(1)]
        public decimal s { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Stores rotation for asset to displayed on the compare screen. </summary>
        ///
        /// <value> The r. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public decimal r { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Stores zIndex for asset to displayed on the compare screen. </summary>
        ///
        /// <value> The z coordinate index. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public int zIndex { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>
        ///     Stores UnixTimeStamp for the last time the asset was adjusted on the compare screen.
        ///     Used to display on the compare screen.
        /// </summary>
        ///
        /// <value> The z coordinate index time stamp. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public long zIndexTimeStamp { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Determines if asset is displayed on the compare screen. </summary>
        ///
        /// <value> True if compare visible, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Boolean CompareVisible { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>
        ///     Store ImageName(If served from Storage) or Image Data(If generated on Client)
        /// </summary>
        ///
        /// <value> The image. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [NotMapped]
        public String Image { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Store file name generated from Storage. </summary>
        ///
        /// <value> The filename. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public String Filename { get; set; }


    }
}